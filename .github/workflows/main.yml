# This is a basic workflow to help you get started with Actions

name: Github Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
    
      - name: ‚öôÔ∏è Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 6.x
          
      # publishes Blazor project to the release-folder
      - name: üõ†Ô∏è Publish .NET Project
        run: dotnet publish ./src/WebApp/WebApp.csproj -c Release -o release --nologo
        
      # The project is then uploaded as an artifact named 'site'.
      - name: ‚¨ÜÔ∏è Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: site
          path: release
          
  deploy:
    concurrency: ci-${{ github.ref }}
    # The second job must depend on the first one to complete before running and uses ubuntu-latest instead of windows.
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    
      # The built project is downloaded into the 'site' folder.
      - name: ‚¨áÔ∏è Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: site
    
      # changes the base-tag in index.html from '/' to 'BlazorWasm-POC' to match GitHub Pages repository subdirectory
      - name: üìù Change base-tag in index.html from / to repository name
        run: sed -i 's/<base href="\/" \/>/<base href="\/BlazorWasm-POC\/" \/>/g' release/wwwroot/index.html
    
      # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: üìù Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
        
      - name: üöÄ Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: release/wwwroot
